{"version":3,"sources":["lib/prettyLinha.js","components/header/Header.js","components/horario/Horario.js","components/lista-horarios/ListaHorarios.js","components/section/Section.js","components/horaro-grande/HorarioGrande.js","components/proximos-horarios/ProximosHorarios.js","lib/getHorarios.js","components/carregando/Carregando.js","components/main/Main.js","lib/proximoHorario.js","App.js","serviceWorker.js","index.js"],"names":["prettyLinha","linha","Header","props","react_default","a","createElement","className","onChange","ev","onLinhaChange","target","value","linhas","map","index","key","horario_Horario","id","horario","observacao","lista_horarios_ListaHorarios","horarios","ceu","Section","text","children","HorarioGrande","concat","matchBackground","ProximosHorarios","HorarioGrande_HorarioGrande","proximoHorario","url","getHorarios","_getHorarios","apply","this","arguments","_callee","response","content","regenerator_default","wrap","_context","prev","next","localStorage","getItem","fetch","sent","json","setItem","JSON","stringify","abrupt","t0","console","error","parse","stop","carregando_Carregando","mensagem","Main","state","proximosHorarios","todosHorarios","res","_this","setState","computProximosHorarios","Object","keys","prox","agora","Date","horaAgora","getHours","minutosAgora","getMinutes","i","length","_horarios$i$horario$s","split","_horarios$i$horario$s2","slicedToArray","shoras","sminutos","nhoras","parseInt","nminutos","Header_Header","Section_Section","ProximosHorarios_ProximosHorarios","React","Component","App","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24e8faeb.chunk.js","sourcesContent":["export default function prettyLinha(linha) {\n  switch(linha) {\n    case 'anglo-ru':\n      return 'Anglo - RU';\n    case 'anglo-med':\n      return 'Anglo - Medicina';\n    case 'anglo-esef':\n      return 'Anglo - ESEF';\n    case 'anglo-capao':\n      return 'Anglo - Capão';\n    case 'capao-anglo':\n      return 'Capão - Anglo';\n    default:\n      return '';\n  }\n}","import React from 'react';\nimport prettyLinha from '../../lib/prettyLinha';\n\nimport './Header.css';\n\nexport default function Header(props) {\n    return (\n      <div className=\"header\">\n        <select className=\"header__select\" onChange={ev => props.onLinhaChange(ev.target.value)}>\n          {\n            props.linhas.map((linha, index) =>\n              <option \n                className=\"header__select--option\"\n                key={index}\n                value={linha}>\n                {\n                  prettyLinha(linha)\n                }\n              </option>\n            )\n          }\n        </select>\n      </div>\n    );\n}\n","import React from 'react';\nimport './Horario.css';\n\nexport default props => (\n  <div className=\"horario-card\" id={props.horario}>\n    <span className=\"horario-card__horario\">\n      {props.horario}\n    </span>\n    <span className=\"horario-card__obs\">\n      {props.observacao}\n    </span>\n  </div>\n);","import React from 'react';\nimport Horario from '../horario/Horario';\nimport './ListaHorarios.css';\n\nexport default props => (\n  <div className=\"container\">\n    {\n      props.horarios.map((horario, index) => \n        <Horario \n          horario={horario.horario}\n          observacao={horario.ceu ? 'CEU' : ''}\n          key={index}\n        />\n      )\n    }\n  </div>\n);","import React from 'react';\n\nimport './Section.css';\n\nexport default function Section(props) {\n  return (\n    <div className=\"section\">\n      <p className=\"section__text\">\n        {props.text || props.children}\n      </p>\n      <br />\n    </div>\n  );\n}","import React from 'react';\nimport './HorarioGrande.css';\nimport prettyLinha from '../../lib/prettyLinha';\n\nexport default function HorarioGrande(props) {\n\n  function matchBackground(linha) {\n    switch(linha) {\n      case 'anglo-ru':\n        return 'background-anglo-ru';\n      case 'anglo-med':\n        return 'background-anglo-med';\n      case 'anglo-esef':\n        return 'background-anglo-esef';\n      case 'anglo-capao':\n        return 'background-anglo-capao';\n      case 'capao-anglo':\n        return 'background-capao-anglo';\n      default:\n        return 'background-white';\n    }\n  }\n\n  return (\n    <div className={`horario-grande ${matchBackground(props.linha)}`}>\n      <div className=\"horario-grande__header\">\n        <span className=\"horario-grande__header--linha\">\n          { prettyLinha(props.linha) }\n        </span>\n        <span className=\"horario-grande__header--observacao\">\n          {props.observacao}\n        </span>\n      </div>\n\n      <div className=\"horario-grande__horario-container\">\n        <span className=\"horario-grande__horario-container--horario\">\n          {props.horario}\n        </span>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport HorarioGrande from '../horaro-grande/HorarioGrande';\n\nimport './ProximosHorarios.css';\n\nexport default function ProximosHorarios(props) {\n\n  return (\n    <div className=\"proximos-horarios\">\n      {\n        props.horarios.map((horario, index) =>\n          <HorarioGrande\n            key={index}\n            linha={horario.linha}\n            observacao={horario.observacao}\n            horario={horario.proximoHorario}\n          />\n        )\n      }\n    </div>\n  )\n}","const url = 'https://raw.githubusercontent.com/gustavofsantos/horarios-onibus-institucional-ufpel/master/horarios.json';\n\nexport default async function getHorarios() {\n  const horarios = localStorage.getItem('horarios-onibus-ufpel');\n\n  if (!horarios) {\n    try {\n      const response = await fetch(url);\n      const content = await response.json();\n\n      localStorage.setItem('horarios-onibus-ufpel', JSON.stringify(content));\n\n      return content;\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  } else {\n    return JSON.parse(horarios);\n  }\n}","import React from 'react';\n\nimport './Carregando.css';\n\nexport default (props) => (\n  <div className=\"carregando\">\n    <span className=\"carregando__texto\">\n      {props.mensagem ? props.mensagem : 'Carregando...'}\n    </span>\n  </div>\n);","import React from 'react';\nimport Header from '../header/Header';\nimport ListaHorarios from '../lista-horarios/ListaHorarios';\nimport Section from '../section/Section';\nimport ProximosHorarios from '../proximos-horarios/ProximosHorarios';\nimport getHorarios from '../../lib/getHorarios';\n\nimport './Main.css';\nimport Carregando from '../carregando/Carregando';\nimport proximoHorario from '../../lib/proximoHorario';\n\nexport default class Main extends React.Component {\n\n  state = {\n    linha: 'anglo-ru',\n    horarios: [],\n    proximosHorarios: [],\n    todosHorarios: {}\n  }\n\n  linhas = [\n    'anglo-ru',\n    'anglo-med',\n    'anglo-esef',\n    'anglo-capao',\n    'capao-anglo'\n  ];\n\n  onLinhaChange = async (linha) => {\n    try {\n      const res = await getHorarios();\n      const horarios = res[linha];\n\n      this.setState({\n        linha,\n        horarios,\n        todosHorarios: res\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  computProximosHorarios = () => {\n    const { todosHorarios } = this.state;\n    const linhas = Object.keys(todosHorarios);\n\n    const horarios = linhas.map(linha => {\n      const prox = proximoHorario(todosHorarios[linha]);\n\n      if (typeof prox === 'object') {\n        return ({\n          linha,\n          proximoHorario: prox ? prox.horario : '',\n          observacao: prox ? prox.ceu ? 'CEU' : '' : ''\n        })\n      } else {\n        return null;\n      }\n    });\n\n    this.setState({\n      proximosHorarios: horarios\n    });\n  }\n\n  async componentWillMount() {\n    await this.onLinhaChange(this.state.linha);\n    this.computProximosHorarios();\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.state.horarios.length ?\n          <div className=\"main-container\">\n            <Header\n              linha={this.state.linha}\n              linhas={this.linhas}\n              onLinhaChange={this.onLinhaChange}\n            />\n            <Section>\n              Próximos horários\n            </Section>\n\n            <ProximosHorarios\n              horarios={this.state.proximosHorarios}\n            />\n\n            <Section>\n              Todos horários\n            </Section>\n\n            <ListaHorarios horarios={this.state.horarios} />\n          </div>\n          :\n          <Carregando />\n        }\n      </div>\n    );\n  }\n}","export default function proximoHorario(horarios) {\n  const agora = new Date();\n  const horaAgora = agora.getHours();\n  const minutosAgora = agora.getMinutes();\n\n  for (let i = 0; i < horarios.length; i++) {\n    const [shoras, sminutos] = horarios[i].horario.split(':');\n    const nhoras = parseInt(shoras);\n    const nminutos = parseInt(sminutos);\n\n    if (nhoras === horaAgora && nminutos >= minutosAgora) {\n      return horarios[i];\n    } else if (nhoras > horaAgora) {\n      return horarios[i];\n    }\n  }\n\n  return null;\n}","import React, { Component } from 'react';\nimport Main from './components/main/Main';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}